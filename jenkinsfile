pipeline {
  agent none

  stages { 
    stage('Unit Testing') {
      agent {
         label 'masternode'
      }
      steps {
        sh 'ant -f test.xml -v'
        junit 'reports/result.xml'
      }
    }
    stage('build') {
      agent {
         label 'masternode'
      }

      steps {		
        sh 'ant -f Build.xml -v'
      }
      post {
        success {
          archiveArtifacts artifacts: 'dist/*.jar', fingerprint: true
        }
      }

    }
    stage('Deploy') {
      agent {
         label 'masternode'
      }

      steps {
         sh "mkdir -p /var/www/html/rectangles/all/${env.BRANCH_NAME}"
         sh "cp dist/rectangle_${env.BUILD_NUMBER}.jar /var/www/html/rectangles/all/${env.BRANCH_NAME}/"
      }
    }
    stage("Running on Centos") {
      agent {
         label 'Centos'
      }
      steps {
         sh "wget http://sumitsalunke4.mylabserver.com/rectangles/all/${env.BRANCH_NAME}/rectangle_${env.BUILD_NUMBER}.jar"
         sh "java -jar rectangle_${env.BUILD_NUMBER}.jar 3 4" 
      }
    }
    stage ("Running on docker") {
      agent {
        docker 'openjdk:8u121-jre'
      }
      steps {
        sh "wget http://sumitsalunke4.mylabserver.com/rectangles/all/${env.BRANCH_NAME}/rectangle_${env.BUILD_NUMBER}.jar"
        sh "java -jar rectangle_${env.BUILD_NUMBER}.jar 3 4"
      }
    }
    stage ("Promote to Green") {
      agent {
        label 'masternode'
      }
      when {
        branch 'master'
      }
      steps {
        sh "cp /var/www/html/rectangles/all/${env.BRANCH_NAME}/rectangle_${env.BUILD_NUMBER}.jar /var/www/html/rectangles/green/rectangle_${env.BUILD_NUMBER}.jar"
      }
    }
    stage("Promote Development branch to master") {
      agent {
        label 'masternode'
      }
      when {
        branch 'development'
      }
      steps {
        echo "staching local changes"
        sh 'git stash'
        echo "Checkout development branch"
        sh 'git checkout development'
        echo "cheking out master branch"
        sh 'git checkout master'
        echo "Merging Development into master"
        sh 'git merge development'
        echo "Pusing to origin master"
        sh "git push origin master"
      }
    } 
  }
  
}
